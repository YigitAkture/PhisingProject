// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhishingTestPlatform.Data;

#nullable disable

namespace PhishingTestPlatform.Data.Migrations
{
    [DbContext(typeof(PhishingDbContext))]
    [Migration("20240111110733_update-table")]
    partial class updatetable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PhishingTestPlatform.Data.Models.EmailTemplates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TemplateBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TemplateSubject")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("PhishingTestPlatform.Data.Models.PhishingEmailSend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsClicked")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("PhishingEmailsSend");
                });

            modelBuilder.Entity("PhishingTestPlatform.Data.Models.PhishingUserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreditCardCVV")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("CreditCardExpirationDateMonth")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<int>("CreditCardExpirationDateYear")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<string>("CreditCardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PhishingEmailSendId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PhishingEmailSendId")
                        .IsUnique();

                    b.ToTable("PhishingInfo");
                });

            modelBuilder.Entity("PhishingTestPlatform.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PhishingTestPlatform.Data.Models.PhishingEmailSend", b =>
                {
                    b.HasOne("PhishingTestPlatform.Data.Models.EmailTemplates", "EmailTemplates")
                        .WithMany("PhishingEmailSend")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailTemplates");
                });

            modelBuilder.Entity("PhishingTestPlatform.Data.Models.PhishingUserInfo", b =>
                {
                    b.HasOne("PhishingTestPlatform.Data.Models.PhishingEmailSend", "PhishingEmailSend")
                        .WithOne("PhishingUserInfo")
                        .HasForeignKey("PhishingTestPlatform.Data.Models.PhishingUserInfo", "PhishingEmailSendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhishingEmailSend");
                });

            modelBuilder.Entity("PhishingTestPlatform.Data.Models.EmailTemplates", b =>
                {
                    b.Navigation("PhishingEmailSend");
                });

            modelBuilder.Entity("PhishingTestPlatform.Data.Models.PhishingEmailSend", b =>
                {
                    b.Navigation("PhishingUserInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
